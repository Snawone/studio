/**
 * @fileoverview Firestore Security Rules for the ONU Inventory App.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model, where each user can only
 * access the ONU (Optical Network Unit) data associated with their own user ID.
 *
 * Data Structure:
 * ONU data is nested under /users/{userId}/onus/{onuId}. Each ONU document
 * contains a 'userId' field that MUST match the {userId} in the path.
 *
 * Key Security Decisions:
 * - Users can only list ONUs that belong to them.
 * - Users can only create, update, or delete ONUs that belong to them.
 * - No global admin roles are defined in this prototype.
 *
 * Denormalization for Authorization:
 * The 'userId' field is denormalized into the ONU document to allow for
 * efficient ownership checks without requiring additional reads.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the user is signed in.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the user ID matches the authenticated user's ID.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the user is the owner of the existing document.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /**
     * @description Secures the /users/{userId}/onus/{onuId} path.
     * @path /users/{userId}/onus/{onuId}
     * @allow (create) User A creates a new ONU document under /users/A/onus/123, where the ONU data contains userId: "A".
     * @allow (update) User A updates an existing ONU document under /users/A/onus/123.
     * @allow (delete) User A deletes an existing ONU document under /users/A/onus/123.
     * @allow (get) User A gets ONU document /users/A/onus/123.
     * @allow (list) User A lists onus under /users/A/onus/.
     * @deny (create) User A attempts to create an ONU document under /users/B/onus/123.
     * @deny (update) User A attempts to update an ONU document under /users/B/onus/123.
     * @deny (delete) User A attempts to delete an ONU document under /users/B/onus/123.
     * @deny (get) User A attempts to get ONU document /users/B/onus/123.
     * @principle Enforces document ownership for writes and reads.  Validates relational integrity.
     */
    match /users/{userId}/onus/{onuId} {
      // Read permissions
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);

      // Write permissions
      allow create: if isOwner(userId) && request.resource.data.userId == userId && request.resource.data.id == onuId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }
  }
}